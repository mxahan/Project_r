plot(svmfit, card, high~carwidht )
svmfit = svm(high~fuelsystem+peakrpm+citympg
+ enginesize+enginetype+carwidth+curbweight+carlength
+ highwaympg+ boreratio+ stroke + wheelbase + drivewheel
+ enginelocation+ aspiration+ doornumber+ horsepower+ compressionratio,
data = card, kernel = "linear", cost = 0.1, scale = FALSE)
plot(svmfit, card, high~carwidht )
svmfit$index
summary(svmfit)
svmfit = svm(high~fuelsystem+peakrpm+citympg
+ enginesize+enginetype+carwidth+curbweight+carlength
+ highwaympg+ boreratio+ stroke + wheelbase + drivewheel
+ enginelocation+ aspiration+ doornumber+ horsepower+ compressionratio,
data = card, kernel = "linear", cost = 0.1, scale = FALSE)
plot(svmfit, card)
plot(svmfit, card, high~curbweight)
plot(svmfit, card, aspiration~curbweight)
plot(svmfit, card, aspiration~curbweight)
high = as.factor(high)
svmfit = svm(high~fuelsystem+peakrpm+citympg
+ enginesize+enginetype+carwidth+curbweight+carlength
+ highwaympg+ boreratio+ stroke + wheelbase + drivewheel
+ enginelocation+ aspiration+ doornumber+ horsepower+ compressionratio,
data = card, kernel = "linear", cost = 0.1, scale = FALSE)
plot(svmfit, card)
plot(svmfit, card, y~curbweight)
svmfit$index
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, card, y~curbweight)
curbweight
carweight
carwidth
type(carwidth)
data.class(carwidth)
fackk = rnorm(20*2)
class(fackk)
data.class(curbweight)
high = ifelse(price<=15000, "No", "Yes")
class(y)
card = data.frame(card, high)
cardshort = data.frame(x = curbweight[1:50], y = as.factor(high[1:50]))
attach(cardshort)
y = high
x
y = high
cardshort = data.frame(x = curbweight, y = as.factor(high))
x = curbweight
cardshort = data.frame(x = curbweight, y = as.factor(high))
attach(cardshort)
library(e1071)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, card, y~curbweight)
plot(svmfit, card)
plot(svmfit, card)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, card)
class(y)
y
high
high = ifelse(price<=15000, "No", "Yes")
class(high)
y =  price<15000
y
class(y)
high = ifelse(price<=15000, 0, 1)
high
class(high)
high = ifelse(price<=15000, 0, 1)
x = curbweight
high = ifelse(price<=15000, 0, 1)
y = high
x = curbweight
cardshort = data.frame(x = curbweight, y = as.factor(high))
attach(cardshort)
library(e1071)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, card)
class(y)
class(x)
cardshort = data.frame(x = curbweight, y = as.factor(high))
library(e1071)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, card)
y = high[1:50]
x = curbweight[1:50]
cardshort = data.frame(x = curbweight, y = as.factor(y))
x = curbweight[1:50]
cardshort = data.frame(x = x, y = as.factor(y))
attach(cardshort)
library(e1071)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, card)
y
x
class(x)
class(y)
typeof(x)
typeof(y)
x= matrix ( rnorm (20*2) , ncol =2)
typeof(x)
set.seed(1)
x= matrix(rnorm(20*2), ncol = 2)
y = c(rep(-1,10), rep(1,10))
x[y==1,] = x[y==1,] + 1
plot(x, col = (3-y))
high = ifelse(price<=15000, 0, 1)
y = high[1:50]
x = curbweight[1:50]
x
x= matrix(rnorm(20*2), ncol = 2)
x
x =  martix(curbweight, carwidth, ncol = 2)
x= matrix(rnorm(20*2), ncol = 2)
y = c(rep(-1,10), rep(1,10))
x[y==1,] = x[y==1,] + 1
plot(x, col = (3-y))
dat = data.frame(x = x, y =as.factor(y))
dat
x =  martix(curbweight, carwidth)
x =  matrix(curbweight, carwidth)
xx =  matrix(curbweight, carwidth)
xx =  matrix(carheight, carwidth)
xx =  matrix(carheight, carwidth, ncol = 2)
xx =  matrix(carheight, carwidth)
cardshort
typeof(x)
xx =  matrix(c(carheight))
xx
xx =  matrix(c(carheight), c(curbweight), ncol = 205, nrow = 2)
xx
xx =  matrix(c(carheight), c(curbweight), ncol = 2)
xx =  matrix(c(carheight), c(curbweight), ncol = 2, ncol = 205)
xx =  matrix(c(carheight), c(curbweight), ncol = 2, nrow  = 205)
high = ifelse(price<=15000, 0, 1)
y = high
x =  matrix(c(carheight), c(curbweight), ncol = 2, nrow  = 205)
cardshort = data.frame(x = x, y = as.factor(y))
attach(cardshort)
library(e1071)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, card)
x= matrix(rnorm(20*2), ncol = 2)
y = c(rep(-1,10), rep(1,10))
x[y==1,] = x[y==1,] + 1
plot(x, col = (3-y))
dat = data.frame(x = x, y =as.factor(y))
cardshort = data.frame(x = x, y = as.factor(y))
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, card)
set.seed(1)
x= matrix(rnorm(20*2), ncol = 2)
y = c(rep(-1,10), rep(1,10))
x[y==1,] = x[y==1,] + 1
plot(x, col = (3-y))
cardshort = data.frame(x = x, y =as.factor(y))
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, card)
plot(svmfit, cardshort)
cardshort = data.frame(x = x, y =as.factor(y))
high = ifelse(price<=15000, 0, 1)
y = high
x =  matrix(c(carheight), c(curbweight), ncol = 2, nrow  = 205)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, cardshort)
cardshort
high = ifelse(price<=15000, 0, 1)
y = high
x =  matrix(c(carheight), c(curbweight), ncol = 2, nrow  = 205)
cardshort = data.frame(x = x, y = as.factor(y))
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, cardshort)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
'''
svmfit = svm(high~fuelsystem+peakrpm+citympg
+ enginesize+enginetype+carwidth+curbweight+carlength
+ highwaympg+ boreratio+ stroke + wheelbase + drivewheel
+ enginelocation+ aspiration+ doornumber+ horsepower+ compressionratio,
data = card, kernel = "linear", cost = 0.1, scale = FALSE)
'''
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
x =  matrix(c(carwidth), c(curbweight), ncol = 2, nrow  = 205)
cardshort = data.frame(x = x, y = as.factor(y))
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, cardshort)
svmfit$index
summary(svmfit)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 0.1, scale = FALSE)
svmfit$index
plot(svmfit, cardshort)
svmfit$index
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 0.1, scale = FALSE)
plot(svmfit, cardshort)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, cardshort)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 0.1, scale = FALSE)
plot(svmfit, cardshort)
x
cutlen = 150
x =  matrix(c(carwidth[1:cutlen]), c(curbweight[1:cutlen]), ncol = 2, nrow  = cutlen)
cardshort = data.frame(x = x, y = as.factor(y))
y = high[1:cutlen]
cardshort = data.frame(x = x, y = as.factor(y))
plot(svmfit, cardshort)
svmfit$index
summary(svmfit)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 0.1, scale = FALSE)
plot(svmfit, cardshort)
svmfit$index
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 0.1, scale = FALSE)
plot(svmfit, cardshort)
svmfit$index
tune.out = tune(svm,y~.
data = cardshort, ranges = list(cost =c(0.001, 0.01, 0.1, 1 ,5 ,10, 100)) )
tune.out = tune(svm,y~.
data = cardshort, ranges = list(cost =c(0.001, 0.01, 0.1, 1 ,5 ,10, 100)) )
tune.out = tune(svm,y~.
data = cardshort, ranges = list(cost =c(0.001, 0.01, 0.1, 1 ,5 ,10, 100)) )
tune.out = tune(svm,y~.,
data = cardshort, ranges = list(cost =c(0.001, 0.01, 0.1, 1 ,5 ,10, 100)) )
summary(tune.out)
bestmod = tune.out$best.model
summary(bestmod)
xtest =  matrix(c(carwidth[cutlen+1:205]),
c(curbweight[cutlen+1:205]), ncol = 2, nrow  =204- cutlen)
xtest =  matrix(c(carwidth[cutlen+1:205]),
c(curbweight[cutlen+1:205]), ncol = 2, nrow  =205- cutlen)
xtest =  matrix(c(carwidth[(cutlen+1):205]),
c(curbweight[(cutlen+1):205]), ncol = 2, nrow  =205- cutlen)
ytest = high[cutlen+1:205]
cardshorttest = data.frame(x = xtest, y = as.factor(ytest))
high
size(high)
shape(high)
ytest = high[(cutlen+1):205]
cardshorttest = data.frame(x = xtest, y = as.factor(ytest))
ypred = predict(bestmod, cardshorttest)
table(predict = ypred, truth = cardshorttest$y)
x =  matrix(c(carheight[1:cutlen]), c(curbweight[1:cutlen]), ncol = 2, nrow  = cutlen)
y = high[1:cutlen]
cardshort = data.frame(x = x, y = as.factor(y))
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, cardshort)
svmfit$index
summary(svmfit)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 0.1, scale = FALSE)
plot(svmfit, cardshort)
svmfit$index
set.seed(1)
tune.out = tune(svm,y~.,
data = cardshort, ranges = list(cost =c(0.001, 0.01, 0.1, 1 ,5 ,10, 100)) )
summary(tune.out)
bestmod = tune.out$best.model
summary(bestmod)
xtest =  matrix(c(carheight[(cutlen+1):205]),
c(curbweight[(cutlen+1):205]), ncol = 2, nrow  =205- cutlen)
ytest = high[(cutlen+1):205]
cardshorttest = data.frame(x = xtest, y = as.factor(ytest))
ypred = predict(bestmod, cardshorttest)
table(predict = ypred, truth = cardshorttest$y)
x =  matrix(c(enginesize[1:cutlen]), c(curbweight[1:cutlen]), ncol = 2, nrow  = cutlen)
y = high[1:cutlen]
cardshort = data.frame(x = x, y = as.factor(y))
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, cardshort)
svmfit$index
summary(svmfit)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 0.1, scale = FALSE)
plot(svmfit, cardshort)
svmfit$index
set.seed(1)
tune.out = tune(svm,y~.,
data = cardshort, ranges = list(cost =c(0.001, 0.01, 0.1, 1 ,5 ,10, 100)) )
summary(tune.out)
bestmod = tune.out$best.model
summary(bestmod)
xtest =  matrix(c(enginesize[(cutlen+1):205]),
c(curbweight[(cutlen+1):205]), ncol = 2, nrow  =205- cutlen)
ytest = high[(cutlen+1):205]
cardshorttest = data.frame(x = xtest, y = as.factor(ytest))
ypred = predict(bestmod, cardshorttest)
table(predict = ypred, truth = cardshorttest$y)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 0.01, scale = FALSE)
ypred = predict(svmfit, cardshorttest)
table(predict = ypred, truth = cardshorttest$y)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 0.0001, scale = FALSE)
ypred = predict(svmfit, cardshorttest)
table(predict = ypred, truth = cardshorttest$y)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 0.1, scale = FALSE)
ypred = predict(svmfit, cardshorttest)
table(predict = ypred, truth = cardshorttest$y)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 100, scale = FALSE)
ypred = predict(svmfit, cardshorttest)
table(predict = ypred, truth = cardshorttest$y)
cutlen = 100 # upto 205
x =  matrix(c(enginesize[1:cutlen]), c(curbweight[1:cutlen]), ncol = 2, nrow  = cutlen)
y = high[1:cutlen]
cardshort = data.frame(x = x, y = as.factor(y))
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, cardshort)
svmfit$index
summary(svmfit)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 0.1, scale = FALSE)
plot(svmfit, cardshort)
svmfit$index
set.seed(1)
tune.out = tune(svm,y~.,
data = cardshort, ranges = list(cost =c(0.001, 0.01, 0.1, 1 ,5 ,10, 100)) )
summary(tune.out)
bestmod = tune.out$best.model
summary(bestmod)
xtest =  matrix(c(enginesize[(cutlen+1):205]),
c(curbweight[(cutlen+1):205]), ncol = 2, nrow  =205- cutlen)
ytest = high[(cutlen+1):205]
cardshorttest = data.frame(x = xtest, y = as.factor(ytest))
ypred = predict(bestmod, cardshorttest)
table(predict = ypred, truth = cardshorttest$y)
cutlen = 180 # upto 205
x =  matrix(c(enginesize[1:cutlen]), c(curbweight[1:cutlen]), ncol = 2, nrow  = cutlen)
y = high[1:cutlen]
cardshort = data.frame(x = x, y = as.factor(y))
attach(cardshort)
library(e1071)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, cardshort)
svmfit$index
summary(svmfit)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 0.1, scale = FALSE)
plot(svmfit, cardshort)
svmfit$index
set.seed(1)
tune.out = tune(svm,y~.,
data = cardshort, ranges = list(cost =c(0.001, 0.01, 0.1, 1 ,5 ,10, 100)) )
summary(tune.out)
bestmod = tune.out$best.model
summary(bestmod)
xtest =  matrix(c(enginesize[(cutlen+1):205]),
c(curbweight[(cutlen+1):205]), ncol = 2, nrow  =205- cutlen)
ytest = high[(cutlen+1):205]
cardshorttest = data.frame(x = xtest, y = as.factor(ytest))
ypred = predict(bestmod, cardshorttest)
table(predict = ypred, truth = cardshorttest$y)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 1, scale = FALSE)
ypred = predict(svmfit, cardshorttest)
table(predict = ypred, truth = cardshorttest$y)
train = sample(200,100)
svmfit = svm(high~fuelsystem+peakrpm+citympg
+ enginesize+enginetype+carwidth+curbweight+carlength
+ highwaympg+ boreratio+ stroke + wheelbase + drivewheel
+ enginelocation+ aspiration+ doornumber+ horsepower+ compressionratio,
data = card[train,], kernel = "radial", gamma = 1, cost = 1)
source('/data/E_drive/github_works/Project_r/Project_R_file.R', echo=TRUE)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 1, scale = FALSE)
ypred = predict(svmfit, cardshorttest)
table(predict = ypred, truth = cardshorttest$y)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 1e05, scale = FALSE)
summary(svmfit)
plot(x, col =y)
x
curbweight
x =  matrix(c(enginesize[1:cutlen]), c(curbweight[1:cutlen]), ncol = 2, nrow  = cutlen)
y = high[1:cutlen]
x
curbweight[1:5]
y
x
curbweight[1:cutlen]
c(curbweight[1:cutlen])
enginesize
x =  matrix( c(curbweight[1:cutlen]), ncol = 1, nrow  = cutlen)
x
x =  matrix( c(curbweight[1:cutlen]), c(enginesize[1:cutlen]),ncol = 1, nrow  = cutlen)
x
x =  matrix( c(curbweight[1:cutlen]), c(enginesize[1:cutlen]),ncol = 2, nrow  = cutlen)
x
x =  matrix( c(curbweight[1:cutlen], enginesize[1:cutlen]),ncol = 2, nrow  = cutlen)
x
y = high[1:cutlen]
cardshort = data.frame(x = x, y = as.factor(y))
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 10, scale = FALSE)
plot(svmfit, cardshort)
svmfit$index
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 100, scale = FALSE)
plot(svmfit, cardshort)
svmfit$index
summary(svmfit)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 0.1, scale = FALSE)
plot(svmfit, cardshort)
svmfit$index
set.seed(1)
tune.out = tune(svm,y~.,
data = cardshort, ranges = list(cost =c(0.001, 0.01, 0.1, 1 ,5 ,10, 100)) )
summary(tune.out)
bestmod = tune.out$best.model
summary(bestmod)
xtest =  matrix(c(curbweight[(cutlen+1):205],enginesize[(cutlen+1):205] ),
ncol = 2, nrow  =205- cutlen)
ytest = high[(cutlen+1):205]
cardshorttest = data.frame(x = xtest, y = as.factor(ytest))
ypred = predict(bestmod, cardshorttest)
table(predict = ypred, truth = cardshorttest$y)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 1, scale = FALSE)
ypred = predict(svmfit, cardshorttest)
table(predict = ypred, truth = cardshorttest$y)
svmfit = svm(y~., data = cardshort, kernel = "linear", cost = 1e05, scale = FALSE)
summary(svmfit)
plot(svmfit)
plot(svmfit, cardshort)
plot(x, col =y)
x
train = sample(180,100)
svmfit = svm(y~., data = cardshort[train,], kernel = "radial", gamma = 1, cost = 1)
plot(svmfit, cardshort[train,])
summary(svmfit)
svmfit = svm(y~., data = cardshort[train,], kernel = "radial", gamma = 1, cost = 1e4)
plot(svmfit, cardshort[train,])
summary(svmfit)
svmfit = svm(y~., data = cardshort[train,], kernel = "radial", gamma = 1, cost = 1e5)
plot(svmfit, cardshort[train,])
summary(svmfit)
tune.out = tune(svm,y~., data = cardshort[train,], kernel = "radial",
ranges = list(cost =c(0.1, 1, 10, 100, 1000)) )
summary(tune.out)
table(truc = cardshort[-train, "y"], pred = predict(tune.out$best.model,
newdata = cardshort[-train,]))
# ROC curve
library(ROCR)
rocplot = function(pred, truth, ...){
prodob = prediction(pred, truth)
perf = performance(predob, "tpr", "fpr")
plot(perf,...)
}
svmfit.opt = svm(y~., data = cardshort[train,],
kernel = "radial", gamma = 2, cost = 1, decision.values =T)
fitted = attributes(predict(svmfit.opt, card[train,], decisionvalue = TRUE))$decision.values
par(mfrow =c(1,2))
rocplot(fitted, card[train, "high"], main = "Training Data")
rocplot(fitted, cardshort[train, "high"], main = "Training Data")
rocplot(fitted, cardshort[train, "y"], main = "Training Data")
fitted = attributes(predict(svmfit.opt, cardshort[train,], decisionvalue = TRUE))$decision.values
par(mfrow =c(1,2))
rocplot(fitted, cardshort[train, "y"], main = "Training Data")
cardshort
cardshort[train,"y"]
fitted = attributes(predict(svmfit.opt, cardshort[train,], decision.value = TRUE))$decision.values
par(mfrow =c(1,2))
rocplot(fitted, cardshort[train, "y"], main = "Training Data")
rocplot = function(pred, truth, ...){
predob = prediction(pred, truth)
perf = performance(predob, "tpr", "fpr")
plot(perf,...)
}
svmfit.opt = svm(y~., data = cardshort[train,],
kernel = "radial", gamma = 2, cost = 1, decision.values =T)
fitted = attributes(predict(svmfit.opt, cardshort[train,], decision.value = TRUE))$decision.values
par(mfrow =c(1,2))
rocplot(fitted, cardshort[train, "y"], main = "Training Data")
predob = prediction(truth, pred)
perf = performance(predob, "tpr", "fpr")
plot(perf,...)
rocplot = function(pred, truth, ...){
predob = prediction(truth, pred)
perf = performance(predob, "tpr", "fpr")
plot(perf,...)
}
svmfit.opt = svm(y~., data = cardshort[train,],
kernel = "radial", gamma = 2, cost = 1, decision.values =T)
fitted = attributes(predict(svmfit.opt, cardshort[train,], decision.value = TRUE))$decision.values
par(mfrow =c(1,2))
rocplot(fitted, cardshort[train, "y"], main = "Training Data")
rocplot = function(pred, truth, ...){
predob = prediction(pred, truth)
perf = performance(predob, "tpr", "fpr")
plot(perf,...)
}
svmfit.opt = svm(y~., data = cardshort[train,],
kernel = "radial", gamma = 2, cost = 1, decision.values =T)
fitted = attributes(predict(svmfit.opt, cardshort[train,], decision.value = TRUE))$decision.values
par(mfrow =c(1,2))
rocplot(fitted, cardshort[train, "y"], main = "Training Data")
svmfit.opt = svm(y~., data = cardshort[train,],
kernel = "radial", gamma = 2, cost = 5, decision.values =T)
svmfit.opt = svm(y~., data = cardshort[train,],
kernel = "radial", gamma = 2, cost = 50, decision.values =T)
fitted = attributes(predict(svmfit.opt, cardshort[train,], decision.value = TRUE))$decision.values
rocplot(fitted, cardshort[train, "y"], main = "Training Data")
rocplot(fitted, cardshort[train, "y"], add =T, col ="red")
svmfit.opt = svm(y~., data = cardshort[train,],
kernel = "radial", gamma = 2, cost = 1, decision.values =T)
fitted = attributes(predict(svmfit.opt, cardshort[train,], decision.value = T))$decision.values
par(mfrow =c(1,2))
rocplot(fitted, cardshort[train, "y"], main = "Training Data")
svmfit.opt = svm(y~., data = cardshort[train,],
kernel = "radial", gamma = 2, cost = 50, decision.values =T)
fitted = attributes(predict(svmfit.opt, cardshort[train,], decision.value = T))$decision.values
rocplot(fitted, cardshort[train, "y"], add =T, col ="red")
svmfit.flex = svm(y~., data = cardshort[train,],
kernel = "radial", gamma = 2, cost = 50, decision.values =T)
fitted = attributes(predict(svmfit.flex, cardshort[train,], decision.value = T))$decision.values
rocplot(fitted, cardshort[train, "y"], add =T, col ="red")
svmfit.opt = svm(y~., data = cardshort[train,],
kernel = "radial", gamma = 2, cost = 1, decision.values =T)
fitted = attributes(predict(svmfit.opt, cardshort[train,], decision.value = T))$decision.values
par(mfrow =c(1,2))
rocplot(fitted, cardshort[train, "y"], main = "Training Data")
svmfit.flex = svm(y~., data = cardshort[train,],
kernel = "radial", gamma = 2, cost = 50, decision.values =T)
fitted = attributes(predict(svmfit.flex, cardshort[train,], decision.value = T))$decision.values
rocplot(fitted, cardshort[train, "y"], add =T, col ="red")
fitted = attributes(predict(svmfit.opt, cardshort[-train,], decision.value = T))$decision.values
rocplot(fitted, cardshort[-train, "y"], add =T, col ="red")
fitted = attributes(predict(svmfit.flex, cardshort[-train,], decision.value = T))$decision.values
rocplot(fitted, cardshort[-train, "y"], add =T, col ="red")

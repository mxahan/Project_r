summary(pls.fit)
validationplot(pls.fit, val.type = "MSEP")
validationplot(pls.fit, val.type = "MSEP")
pls.pred = predict(pls.fit, x[test,], ncomp = 4)
mean((pls.pred - y.test)^2)
pls.fit =  plsr(price~fuelsystem+peakrpm+citympg
+ enginesize+enginetype+carwidth+curbweight+carlength
+ highwaympg+ boreratio+ stroke + wheelbase + drivewheel
+ enginelocation+ aspiration+ doornumber+ horsepower+ compressionratio,
data = card,  scale = TRUE, ncomp =2)
summary(pls.fit)
pls.fit =  plsr(price~fuelsystem+peakrpm+citympg
+ enginesize+enginetype+carwidth+curbweight+carlength
+ highwaympg+ boreratio+ stroke + wheelbase + drivewheel
+ enginelocation+ aspiration+ doornumber+ horsepower+ compressionratio,
data = card,  scale = TRUE, ncomp =4)
summary(pls.fit)
pls.fit =  plsr(price~peakrpm+citympg+ enginesize
+carwidth+curbweight+carlength
+ highwaympg+  horsepower+enginelocation,
data = card,  scale = TRUE, ncomp =4)
summary(pls.fit)
pls.fit = plsr(price~peakrpm+citympg+ enginesize
+carwidth+curbweight+carlength
+ highwaympg+  horsepower+enginelocation,
data = card,  scale = TRUE, validation = "CV")
summary(pls.fit)
validationplot(pls.fit, val.type = "MSEP")
pls.pred = predict(pls.fit, x[test,], ncomp = 4)
mean((pls.pred - y.test)^2)
pls.fit =  plsr(price~peakrpm+citympg+ enginesize
+carwidth+curbweight+carlength
+ highwaympg+  horsepower+enginelocation,
data = card,  scale = TRUE, ncomp =4)
summary(pls.fit)
fit = lm(price~poly(enginesize, 4), data = card)
coef(summary(fit))
fit = lm(price~poly(enginesize, 4), data = card)
coef(summary(fit))
fit = lm(price~poly(enginesize, 4)+ carwidth+ enginelocation, data = card)
fit = lm(price~poly(enginesize, 4)+ carwidth+ enginelocation+drivewheel, data = card)
coef(summary(fit))
fit2 = lm(price~poly(enginesize, 4, raw=T)+ carwidth+ enginelocation+drivewheel, data = card)
coef(summary(fit))
fit2a = lm(price~enginesize+I(enginesize^2)+I(enginesize^3) + I(enginesize^4)
+ carwidth+ enginelocation+drivewheel, data=card)
coef(fit2a)
fit2b =  lm(price~cbind(enginesize, enginesize^2, enginesize^3,enginesize^4)
+ carwidth+ enginelocation+drivewheel, data=card)
coef(fit2b)
engsrange =  range(enginesize)
engsrange =  range(enginesize)
engs.grid =  seq(from=engsrange[1], to = engsrange[2])
preds= predict(fit, newdata = list(enginesize=engs.grid), se=TRUE)
se.bands =  cbind(preds$fit+2*preds$se.fit, preds$fit-2*preds$se)
engsrange =  range(enginesize)
engs.grid =  seq(from=engsrange[1], to = engsrange[2])
preds= predict(fit, newdata = list(enginesize=engs.grid), se=TRUE)
se.bands =  cbind(preds$fit+2*preds$se.fit, preds$fit-2*preds$se)
preds= predict(fit, newdata = list(enginesize=engs.grid), se=TRUE)
fit = lm(price~poly(enginesize, 4), data = card)
coef(summary(fit))
fit2 = lm(price~poly(enginesize, 4, raw=T), data = card)
coef(summary(fit))
fit2a = lm(price~enginesize+I(enginesize^2)+I(enginesize^3) + I(enginesize^4)
+ carwidth+ enginelocation+drivewheel, data=card)
coef(fit2a)
fit2b =  lm(price~cbind(enginesize, enginesize^2, enginesize^3,enginesize^4)
+ carwidth+ enginelocation+drivewheel, data=card)
engsrange =  range(enginesize)
engs.grid =  seq(from=engsrange[1], to = engsrange[2])
preds= predict(fit, newdata = list(enginesize=engs.grid), se=TRUE)
se.bands =  cbind(preds$fit+2*preds$se.fit, preds$fit-2*preds$se)
#plot
par(mfrow=c(1,2), mar = c(4.5, 4.5,1,1), oma=c(0,0,4,0))
plot(enginesize, price, xlim= engsrange, cex=0.5, col="darkgrey")
title("Degree 3  polynomial", outer=T)
line(engs.grid, preds$fit, lwd=2, col="blue")
matlines(engs.grid, se.bands, lwd=1, col="blue", lty=3)
preds2= predict(fit2, newdata=list(enginesize=engs.grid), se=TRUE)
max(abs(preds$fit- preds2$fit))
fit.1 = lm(price~enginesize, data=card)
fit.2 = lm(price~poly(enginesize,2), data=card)
fit.3 = lm(price~poly(enginesize,3), data=card)
fit.4 = lm(price~poly(enginesize,4), data=card)
fit.5 = lm(price~poly(enginesize,5), data=card)
anova(fit.1, fit.2, fit.3, fit.4, fit.5)
coef(summary(fit.5))
fit.1 = lm(price~enginesize+carwidth, data=card)
fit.2 = lm(price~poly(enginesize,2)+carwidth, data=card)
fit.1 = lm(price~poly(enginesize,3)+carwidth, data=card)
anova(fit.1, fit.2, fit.3)
preds2= predict(fit2, newdata=list(enginesize=engs.grid), se=TRUE)
max(abs(preds$fit- preds2$fit))
fit.1 = lm(price~enginesize, data=card)
fit.2 = lm(price~poly(enginesize,2), data=card)
fit.3 = lm(price~poly(enginesize,3), data=card)
fit.4 = lm(price~poly(enginesize,4), data=card)
fit.5 = lm(price~poly(enginesize,5), data=card)
anova(fit.1, fit.2, fit.3, fit.4, fit.5)
coef(summary(fit.5))
fit.1 = lm(price~carwidth, data=card)
fit.2 = lm(price~poly(enginesize,2), data=card)
fit.3 = lm(price~poly(enginesize,3), data=card)
fit.4 = lm(price~poly(enginesize,4), data=card)
fit.5 = lm(price~poly(enginesize,5), data=card)
anova(fit.1, fit.2, fit.3, fit.4, fit.5)
coef(summary(fit.5))
fit.1 = lm(price~carwidth, data=card)
fit.2 = lm(price~poly(carwidth,2), data=card)
fit.3 = lm(price~poly(carwidth,3), data=card)
fit.4 = lm(price~poly(carwidth,4), data=card)
fit.5 = lm(price~poly(carwidth,5), data=card)
anova(fit.1, fit.2, fit.3, fit.4, fit.5)
fit.1 = lm(price~carwidth, data=card)
fit.2 = lm(price~poly(carwidth,2), data=card)
fit.3 = lm(price~poly(carwidth,3), data=card)
fit.4 = lm(price~poly(carwidth,4), data=card)
fit.5 = lm(price~poly(carwidth,5), data=card)
anova(fit.1, fit.2, fit.3, fit.4, fit.5)
coef(summary(fit.5))
enginesize
fit.1 = lm(price~carwidth, data=card)
fit.2 = lm(price~poly(enginesize,2), data=card)
fit.3 = lm(price~poly(enginesize,3), data=card)
fit.4 = lm(price~poly(enginesize,4), data=card)
fit.5 = lm(price~poly(enginesize,5), data=card)
anova(fit.1, fit.2, fit.3, fit.4, fit.5)
coef(summary(fit.5))
fit.1 = lm(price~enginesize+carwidth, data=card)
fit.2 = lm(price~poly(enginesize,2)+carwidth, data=card)
fit.1 = lm(price~poly(enginesize,3)+carwidth, data=card)
anova(fit.1, fit.2, fit.3)
fit.1 = lm(price~enginesize+carwidth, data=card)
fit.2 = lm(price~poly(enginesize,2)+carwidth, data=card)
fit.3 = lm(price~poly(enginesize,3)+carwidth, data=card)
anova(fit.1, fit.2, fit.3)
fit = glm(I(price>15000)~poly(enginesize, 4), data=card, family = binomial)
preds = predict(fit, newdata = list(enginesize=engs.grid), se=T)
pfit = exp(preds$fit)/(1+exp(preds$fit))
se.bands.logit = cbind(preds$fit+2*preds$se.fit, preds$fit-2*preds$se.fit)
se.bands = exp(se.bands.logit)/(1+exp(se.bands.logit))
preds = predict(fit, newdata = list(enginesize=engs.grid), type="response", se=T)
plot(enginesize, I(price>15000), xlim=engsrange, type ="n", ylim= c(0,0.2))
points(jitter(enginesize), I((price>15000)/5), cex=0.5, pch="|", col="darkgrey")
lines(engs.grid, pfit, lwd=2, col="blue")
matlines(engs.grid, se.bands, lwd = 1, col="blue", lyt=3)
mean(price)
median(price)
fit = glm(I(price>10300)~poly(enginesize, 4), data=card, family = binomial)
preds = predict(fit, newdata = list(enginesize=engs.grid), se=T)
pfit = exp(preds$fit)/(1+exp(preds$fit))
se.bands.logit = cbind(preds$fit+2*preds$se.fit, preds$fit-2*preds$se.fit)
se.bands = exp(se.bands.logit)/(1+exp(se.bands.logit))
preds = predict(fit, newdata = list(enginesize=engs.grid), type="response", se=T)
plot(enginesize, I(price>15000), xlim=engsrange, type ="n", ylim= c(0,0.2))
points(jitter(enginesize), I((price>15000)/5), cex=0.5, pch="|", col="darkgrey")
lines(engs.grid, pfit, lwd=2, col="blue")
matlines(engs.grid, se.bands, lwd = 1, col="blue", lyt=3)
table(cut(enginesize, 4))
fit =lm(price~cut(enginesize, 4), data=card)
coef(summary(fit))
fit = lm(price~poly(enginesize, 4), data = card)
coef(summary(fit))
fit2 = lm(price~poly(enginesize, 4, raw=T), data = card)
coef(summary(fit))
fit2a = lm(price~enginesize+I(enginesize^2)+I(enginesize^3) + I(enginesize^4)
+ carwidth+ enginelocation+drivewheel, data=card)
coef(fit2a)
fit2b =  lm(price~cbind(enginesize, enginesize^2, enginesize^3,enginesize^4)
+ carwidth+ enginelocation+drivewheel, data=card)
engsrange =  range(enginesize)
engs.grid =  seq(from=engsrange[1], to = engsrange[2])
preds= predict(fit, newdata = list(enginesize=engs.grid), se=TRUE)
se.bands =  cbind(preds$fit+2*preds$se.fit, preds$fit-2*preds$se)
#plot
par(mfrow=c(1,2), mar = c(4.5, 4.5,1,1), oma=c(0,0,4,0))
plot(enginesize, price, xlim= engsrange, cex=0.5, col="darkgrey")
title("Degree 3  polynomial", outer=T)
line(engs.grid, preds$fit, lwd=2, col="blue")
matlines(engs.grid, se.bands, lwd=1, col="blue", lty=3)
preds2= predict(fit2, newdata=list(enginesize=engs.grid), se=TRUE)
max(abs(preds$fit- preds2$fit))
fit.1 = lm(price~carwidth, data=card)
fit.2 = lm(price~poly(enginesize,2), data=card)
fit.3 = lm(price~poly(enginesize,3), data=card)
fit.4 = lm(price~poly(enginesize,4), data=card)
fit.5 = lm(price~poly(enginesize,5), data=card)
anova(fit.1, fit.2, fit.3, fit.4, fit.5)
fit.3 = lm(price~poly(carwidth,3), data=card)
fit.4 = lm(price~poly(enginesize,4), data=card)
fit.5 = lm(price~poly(enginesize,5), data=card)
anova(fit.1, fit.2, fit.3, fit.4, fit.5)
fit.1 = lm(price~carwidth, data=card)
fit.2 = lm(price~poly(enginesize,2), data=card)
fit.3 = lm(price~poly(enginesize,3), data=card)
fit.4 = lm(price~poly(enginesize,4), data=card)
fit.5 = lm(price~poly(enginesize,5), data=card)
anova(fit.1, fit.2, fit.3, fit.4, fit.5)
coef(summary(fit.5))
fit.1 = lm(price~enginesize, data=card)
fit.2 = lm(price~poly(enginesize,2), data=card)
fit.3 = lm(price~poly(enginesize,3), data=card)
fit.4 = lm(price~poly(enginesize,4), data=card)
fit.5 = lm(price~poly(enginesize,5), data=card)
anova(fit.1, fit.2, fit.3, fit.4, fit.5)
carwidth
carwidth
carwidth
fit.1 = lm(price~carwidth, data=card)
fit.2 = lm(price~poly(enginesize,2), data=card)
fit.3 = lm(price~poly(enginesize,3), data=card)
fit.4 = lm(price~poly(enginesize,4), data=card)
fit.5 = lm(price~poly(enginesize,5), data=card)
anova(fit.1, fit.2, fit.3, fit.4, fit.5)
coef(summary(fit.5))
fit.1 = lm(price~enginesize+carwidth, data=card)
fit.2 = lm(price~poly(enginesize,2)+carwidth, data=card)
fit.3 = lm(price~poly(enginesize,3)+carwidth, data=card)
anova(fit.1, fit.2, fit.3)
coef(summary(fit.5))
fit.1 = lm(price~carwidth, data=card)
fit.2 = lm(price~poly(enginesize,2), data=card)
fit.3 = lm(price~poly(enginesize,3), data=card)
fit.4 = lm(price~poly(enginesize,4), data=card)
fit.5 = lm(price~poly(enginesize,5), data=card)
anova(fit.1, fit.2, fit.3, fit.4, fit.5)
coef(summary(fit.5))
fit.1 = lm(price~engiesize, data=card)
fit.2 = lm(price~poly(enginesize,2), data=card)
fit.3 = lm(price~poly(enginesize,3), data=card)
fit.4 = lm(price~poly(enginesize,4), data=card)
fit.5 = lm(price~poly(enginesize,5), data=card)
anova(fit.1, fit.2, fit.3, fit.4, fit.5)
coef(summary(fit.5))
fit.1 = lm(price~enginesize, data=card)
fit.2 = lm(price~poly(enginesize,2), data=card)
fit.3 = lm(price~poly(enginesize,3), data=card)
fit.4 = lm(price~poly(enginesize,4), data=card)
fit.5 = lm(price~poly(enginesize,5), data=card)
anova(fit.1, fit.2, fit.3, fit.4, fit.5)
coef(summary(fit.5))
fit.1 = lm(price~enginesize+carwidth, data=card)
fit.2 = lm(price~poly(enginesize,2)+carwidth, data=card)
.6*.6
5.35*5.35
fit.1 = lm(price~enginesize+carwidth, data=card)
fit.2 = lm(price~poly(enginesize,2)+carwidth, data=card)
fit.3 = lm(price~poly(enginesize,3)+carwidth, data=card)
anova(fit.1, fit.2, fit.3)
fit = lm(price~poly(enginesize, 4), data = card)
coef(summary(fit))
fit2 = lm(price~poly(enginesize, 4, raw=T), data = card)
coef(summary(fit))
fit2a = lm(price~enginesize+I(enginesize^2)+I(enginesize^3) + I(enginesize^4)
+ carwidth+ enginelocation+drivewheel, data=card)
coef(fit2a)
coef(fit)
coef(fit2)
fit = lm(price~poly(enginesize, 4), data = card)
coef(summary(fit))
fit2 = lm(price~poly(enginesize, 4, raw=T), data = card)
coef(summary(fit))
fit2a = lm(price~enginesize+I(enginesize^2)+I(enginesize^3) + I(enginesize^4)
+ carwidth+ enginelocation+drivewheel, data=card)
coef(fit2a)
fit2a = lm(price~enginesize+I(enginesize^2)+I(enginesize^3) + I(enginesize^4), data=card)
coef(fit2a)
fit2b =  lm(price~cbind(enginesize, enginesize^2, enginesize^3,enginesize^4), data=card)
coef(fit2)
coef(fit)
fit2a = lm(price~enginesize+I(enginesize^2)+I(enginesize^3) + I(enginesize^4), data=card)
coef(fit2a)
fit2b =  lm(price~cbind(enginesize, enginesize^2, enginesize^3,enginesize^4), data=card)
engsrange =  range(enginesize)
engs.grid =  seq(from=engsrange[1], to = engsrange[2])
preds= predict(fit, newdata = list(enginesize=engs.grid), se=TRUE)
se.bands =  cbind(preds$fit+2*preds$se.fit, preds$fit-2*preds$se)
#plot
par(mfrow=c(1,2), mar = c(4.5, 4.5,1,1), oma=c(0,0,4,0))
plot(enginesize, price, xlim= engsrange, cex=0.5, col="darkgrey")
title("Degree 3  polynomial", outer=T)
line(engs.grid, preds$fit, lwd=2, col="blue")
matlines(engs.grid, se.bands, lwd=1, col="blue", lty=3)
preds2= predict(fit2, newdata=list(enginesize=engs.grid), se=TRUE)
max(abs(preds$fit- preds2$fit))
fit.1 = lm(price~enginesize, data=card)
fit.2 = lm(price~poly(enginesize,2), data=card)
fit.3 = lm(price~poly(enginesize,3), data=card)
fit.4 = lm(price~poly(enginesize,4), data=card)
fit.5 = lm(price~poly(enginesize,5), data=card)
anova(fit.1, fit.2, fit.3, fit.4, fit.5)
fit.1 = lm(price~carwidth, data=card)
fit.2 = lm(price~poly(enginesize,2), data=card)
fit.3 = lm(price~poly(enginesize,3), data=card)
fit.4 = lm(price~poly(enginesize,4), data=card)
fit.5 = lm(price~poly(enginesize,5), data=card)
anova(fit.1, fit.2, fit.3, fit.4, fit.5)
coef(summary(fit.5))
fit.1 = lm(price~enginesize+carwidth, data=card)
fit.2 = lm(price~poly(enginesize,2)+carwidth, data=card)
fit.3 = lm(price~poly(enginesize,3)+carwidth, data=card)
anova(fit.1, fit.2, fit.3)
coef(summary(fit.5))
fit.1 = lm(price~enginesize+carwidth, data=card)
fit.2 = lm(price~poly(enginesize,2)+carwidth, data=card)
fit.3 = lm(price~poly(enginesize,3)+carwidth, data=card)
anova(fit.1, fit.2, fit.3)
fit.1 = lm(price~carwidth, data=card)
fit.2 = lm(price~poly(enginesize,2)+carwidth, data=card)
fit.3 = lm(price~poly(enginesize,3)+carwidth, data=card)
anova(fit.1, fit.2, fit.3)
fit.1 = lm(price~carwidth+enginesize, data=card)
fit.2 = lm(price~poly(enginesize,2)+carwidth, data=card)
fit.3 = lm(price~poly(enginesize,3)+carwidth, data=card)
anova(fit.1, fit.2, fit.3)
#plot
par(mfrow=c(1,2), mar = c(4.5, 4.5,1,1), oma=c(0,0,4,0))
plot(enginesize, price, xlim= engsrange, cex=0.5, col="darkgrey")
title("Degree 4  polynomial", outer=T)
line(engs.grid, preds$fit, lwd=2, col="blue")
matlines(engs.grid, se.bands, lwd=1, col="blue", lty=3)
fit.1 = lm(price~enginesize, data=card)
fit.2 = lm(price~poly(enginesize,2), data=card)
fit.3 = lm(price~poly(enginesize,3), data=card)
fit.4 = lm(price~poly(enginesize,4), data=card)
fit.5 = lm(price~poly(enginesize,5), data=card)
anova(fit.1, fit.2, fit.3, fit.4, fit.5)
# spline
library(splines)
fit = lm(price~bs(enginesize, knots = c(25,40,60)), data=card)
pred = predict(fit, newdata = list(enginesize=engs.grid), se=T)
plot(enginesize, price, col="grey")
lines(engs.grid, pred$fit, lwd=2)
lines(engs.grid, pred$fit+2*pred$se, ity="dashed")
lines(engs.grid, pred$fit-2*pred$se, ity="dashed")
dim(bs(enginesize, knots=c(25,40,60)))
fit = lm(price~bs(carwidth, knots = c(25,40,60)), data=card)
pred = predict(fit, newdata = list(enginesize=engs.grid), se=T)
fit = lm(price~bs(enginesize, knots = c(25,40,60)), data=card)
pred = predict(fit, newdata = list(enginesize=engs.grid), se=T)
plot(enginesize, price, col="grey")
lines(engs.grid, pred$fit, lwd=2)
lines(engs.grid, pred$fit+2*pred$se, ity="dashed")
lines(engs.grid, pred$fit-2*pred$se, ity="dashed")
dim(bs(enginesize, knots=c(25,40,60)))
dim(bs(enginesize, df=6))
attr(bs(enginesize, df=6), "knots")
fit2 = lm(price~ns(enginesize, df=4), data=card)
pred2= predict(fit2, newdata = list(enginesize=engs.grid), se=T)
lines(engs.grid, pred2$fit, col="red", lwd=2)
plot(enginesize, price, xlim= engsrange, cex=0.5, col="darkgrey")
title("smoothing Spline")
fit = smooth.spline(enginesize, price, df=16)
fit2 = smooth.spline(enginesize, price, cv=TRUE)
fit2$df
lines(fit,col="red", lwd=2)
lines(fit2,col="blue", lwd=2)
legend("topright", legend = c("16 DF", "6.8 DF"), col=c("red", "blue"), lty=1, lwd=2, cex=0.8)
plot(enginesize, price, xlim = engsrange, cex=.5, col="darkgrey")
title("local regerssion")
fit = loess(price~enginesize, span=.2, data=card)
fit2 = loess(price~enginesize, span=.5, data=card)
lines(engs.grid, predict(fit, data.frame(enginesize=engs.grid)), col="red", lwd=2)
lines(engs.grid, predict(fit2, data.frame(enginesize=engs.grid)), col="blue", lwd=2)
legend("topright", legend = c("Span 0.2", "Spna 0.5"), col=c("red", "blue"), lty=1, lwd=2, cex=0.8)
gam1 = lm(price~ns(carwidth, 4)+ns(enginesize,5)+curbweight, data=card)
library(gam)  #gam in the book and change the poly
install.packages(gam)
"gam"
install.packages("gam")
# spline
library(splines)
fit = lm(price~bs(enginesize, knots = c(25,40,60)), data=card)
# spline
library(splines)
fit = lm(price~bs(enginesize, knots = c(25,40,60)), data=card)
pred = predict(fit, newdata = list(enginesize=engs.grid), se=T)
plot(enginesize, price, col="grey")
lines(engs.grid, pred$fit, lwd=2)
lines(engs.grid, pred$fit+2*pred$se, ity="dashed")
lines(engs.grid, pred$fit-2*pred$se, ity="dashed")
dim(bs(enginesize, knots=c(25,40,60)))
dim(bs(enginesize, df=6))
attr(bs(enginesize, df=6), "knots")
fit2 = lm(price~ns(enginesize, df=4), data=card)
pred2= predict(fit2, newdata = list(enginesize=engs.grid), se=T)
lines(engs.grid, pred2$fit, col="red", lwd=2)
plot(enginesize, price, xlim= engsrange, cex=0.5, col="darkgrey")
title("smoothing Spline")
fit = smooth.spline(enginesize, price, df=16)
fit2 = smooth.spline(enginesize, price, cv=TRUE)
fit2$df
lines(fit,col="red", lwd=2)
lines(fit2,col="blue", lwd=2)
legend("topright", legend = c("16 DF", "6.8 DF"), col=c("red", "blue"), lty=1, lwd=2, cex=0.8)
plot(enginesize, price, xlim = engsrange, cex=.5, col="darkgrey")
title("local regerssion")
fit = loess(price~enginesize, span=.2, data=card)
fit2 = loess(price~enginesize, span=.5, data=card)
lines(engs.grid, predict(fit, data.frame(enginesize=engs.grid)), col="red", lwd=2)
lines(engs.grid, predict(fit2, data.frame(enginesize=engs.grid)), col="blue", lwd=2)
legend("topright", legend = c("Span 0.2", "Spna 0.5"), col=c("red", "blue"), lty=1, lwd=2, cex=0.8)
gam1 = lm(price~ns(carwidth, 4)+ns(enginesize,5)+curbweight, data=card)
# spline
library(splines)
fit = lm(price~bs(enginesize, knots = c(25,40,60)), data=card)
pred = predict(fit, newdata = list(enginesize=engs.grid), se=T)
plot(enginesize, price, col="grey")
lines(engs.grid, pred$fit, lwd=2)
lines(engs.grid, pred$fit+2*pred$se, ity="dashed")
lines(engs.grid, pred$fit-2*pred$se, ity="dashed")
dim(bs(enginesize, knots=c(25,40,60)))
dim(bs(enginesize, df=6))
attr(bs(enginesize, df=6), "knots")
fit2 = lm(price~ns(enginesize, df=4), data=card)
pred2= predict(fit2, newdata = list(enginesize=engs.grid), se=T)
lines(engs.grid, pred2$fit, col="red", lwd=2)
plot(enginesize, price, xlim= engsrange, cex=0.5, col="darkgrey")
# spline
library(splines)
fit = lm(price~bs(enginesize, knots = c(25,40,60)), data=card)
pred = predict(fit, newdata = list(enginesize=engs.grid), se=T)
plot(enginesize, price, col="grey")
lines(engs.grid, pred$fit, lwd=2)
lines(engs.grid, pred$fit+2*pred$se, ity="dashed")
lines(engs.grid, pred$fit-2*pred$se, ity="dashed")
dim(bs(enginesize, knots=c(25,40,60)))
dim(bs(enginesize, df=6))
attr(bs(enginesize, df=6), "knots")
enginesize
min(enginesize)
max(enginesize)
fit = lm(price~bs(enginesize, knots = c(90,140,200)), data=card)
pred = predict(fit, newdata = list(enginesize=engs.grid), se=T)
plot(enginesize, price, col="grey")
lines(engs.grid, pred$fit, lwd=2)
lines(engs.grid, pred$fit+2*pred$se, ity="dashed")
lines(engs.grid, pred$fit-2*pred$se, ity="dashed")
dim(bs(enginesize, knots=c(90,140,200)))
dim(bs(enginesize, df=6))
attr(bs(enginesize, df=6), "knots")
fit = lm(price~bs(enginesize, knots = c(90,120,200)), data=card)
pred = predict(fit, newdata = list(enginesize=engs.grid), se=T)
plot(enginesize, price, col="grey")
lines(engs.grid, pred$fit, lwd=2)
lines(engs.grid, pred$fit+2*pred$se, ity="dashed")
lines(engs.grid, pred$fit-2*pred$se, ity="dashed")
dim(bs(enginesize, knots=c(90,142,200)))
dim(bs(enginesize, knots=c(90,14,200)))
dim(bs(enginesize, df=6))
attr(bs(enginesize, df=6), "knots")
fit2 = lm(price~ns(enginesize, df=4), data=card)
pred2= predict(fit2, newdata = list(enginesize=engs.grid), se=T)
lines(engs.grid, pred2$fit, col="red", lwd=2)
dim(bs(enginesize, knots=c(90,120,200)))
dim(bs(enginesize, df=6))
attr(bs(enginesize, df=6), "knots")
fit2 = lm(price~ns(enginesize, df=4), data=card)
dim(bs(enginesize, knots=c(90,120,200)))
dim(bs(enginesize, df=6))
attr(bs(enginesize, df=6), "knots")
fit = lm(price~bs(enginesize, knots = c(90,120,180)), data=card)
pred = predict(fit, newdata = list(enginesize=engs.grid), se=T)
plot(enginesize, price, col="grey")
lines(engs.grid, pred$fit, lwd=2)
lines(engs.grid, pred$fit+2*pred$se, ity="dashed")
lines(engs.grid, pred$fit-2*pred$se, ity="dashed")
dim(bs(enginesize, knots=c(90,120,200)))
dim(bs(enginesize, df=6))
attr(bs(enginesize, df=6), "knots")
dim(bs(enginesize, knots=c(90,120,180)))
dim(bs(enginesize, df=6))
attr(bs(enginesize, df=6), "knots")
fit2 = lm(price~ns(enginesize, df=4), data=card)
pred2= predict(fit2, newdata = list(enginesize=engs.grid), se=T)
lines(engs.grid, pred2$fit, col="red", lwd=2)
#smoothed spline
plot(enginesize, price, xlim= engsrange, cex=0.5, col="darkgrey")
title("smoothing Spline")
fit = smooth.spline(enginesize, price, df=16)
fit2 = smooth.spline(enginesize, price, cv=TRUE)
fit2$df
lines(fit,col="red", lwd=2)
lines(fit2,col="blue", lwd=2)
legend("topright", legend = c("16 DF", "6.8 DF"), col=c("red", "blue"), lty=1, lwd=2, cex=0.8)
plot(enginesize, price, xlim = engsrange, cex=.5, col="darkgrey")
title("local regerssion")
fit = loess(price~enginesize, span=.2, data=card)
fit2 = loess(price~enginesize, span=.5, data=card)
lines(engs.grid, predict(fit, data.frame(enginesize=engs.grid)), col="red", lwd=2)
lines(engs.grid, predict(fit2, data.frame(enginesize=engs.grid)), col="blue", lwd=2)
legend("topright", legend = c("Span 0.2", "Spna 0.5"), col=c("red", "blue"), lty=1, lwd=2, cex=0.8)
source('/data/E_drive/github_works/Project_r/Project_R_file.R', echo=TRUE)
#smoothed spline
plot(enginesize, price, xlim= engsrange, cex=0.5, col="darkgrey")
title("smoothing Spline")
fit = smooth.spline(enginesize, price, df=16)
fit2 = smooth.spline(enginesize, price, cv=TRUE)
fit2$df
lines(fit,col="red", lwd=2)
lines(fit2,col="blue", lwd=2)
legend("topright", legend = c("16 DF", "6.8 DF"), col=c("red", "blue"), lty=1, lwd=2, cex=0.8)
#smoothed spline
plot(enginesize, price, xlim= engsrange, cex=0.5, col="darkgrey")
title("smoothing Spline")
fit = smooth.spline(enginesize, price, df=16)
fit2 = smooth.spline(enginesize, price, cv=TRUE)
fit2$df
lines(fit,col="red", lwd=2)
lines(fit2,col="blue", lwd=2)
legend("topright", legend = c("16 DF", "6.95 DF"), col=c("red", "blue"), lty=1, lwd=2, cex=0.8)
